[{"id":"9947d194.0da3d","type":"tab","label":"Integrated","disabled":false,"info":""},{"id":"5d0e40e2.f194f","type":"function","z":"9947d194.0da3d","name":"to string","func":"msg.payload = msg.payload.data.toString();\nreturn msg;","outputs":1,"noerr":0,"x":240,"y":300,"wires":[["121b0fb9.20f57","8f3d5141.75be7"]]},{"id":"121b0fb9.20f57","type":"debug","z":"9947d194.0da3d","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":490,"y":320,"wires":[]},{"id":"188f449e.9bcbeb","type":"xbee-rx","z":"9947d194.0da3d","name":"","xBee":"ecb94d4c.99e8f","x":60,"y":280,"wires":[["5d0e40e2.f194f"]]},{"id":"8f3d5141.75be7","type":"tcp out","z":"9947d194.0da3d","host":"192.168.101.18","port":"5444","beserver":"client","base64":false,"end":false,"name":"","x":550,"y":360,"wires":[]},{"id":"ee6f24ff.2497c8","type":"scan ble","z":"9947d194.0da3d","uuids":"","duplicates":true,"name":"ble_Scanner","x":410,"y":480,"wires":[["447dd2da.c3101c"]],"inputLabels":["msg.payload.scan"]},{"id":"8922cb4d.1143a8","type":"function","z":"9947d194.0da3d","name":"beacon_8506","func":"var tar = \"0cf3ee0d4007\";\nvar wait = 10; // time out if device is out of range\nvar count = context.get('count')||0; //set counter\n\n// the target uuid is the required device \nif (msg.peripheralUuid == tar){\n    //display rssi value\n    var x = msg.rssi; \n    msg.payload = x;\n    // device detected, counter = 0\n    count = 0;\n    context.set('count',count);\n    msg.count = count;\n    return msg;\n}\nelse if (msg.peripheralUuid != tar){\n    // not our device, counter++;\n    count += 1;\n    context.set('count',count);\n    msg.count = count;\n    // we have not receive the signal of target \n    // for a while, say that it is offline or \n    // out of range. \n    if (msg.count > wait || msg.noSig == 1){\n        msg.payload = -200;\n        // reset counter for next use\n        count = 0;\n        context.set('count',count);\n        msg.count = count;\n        return msg;\n    }\n    \n}\n\n\n","outputs":1,"noerr":0,"x":820,"y":540,"wires":[["bf227e72.00917"]]},{"id":"cbb843fb.1598a","type":"function","z":"9947d194.0da3d","name":"beacon_25015","func":"var tar = \"0cf3ee0061b7\";\nvar wait = 10; // time out if device is out of range\nvar count2 = context.get('count2')||0; //set counter\n\n// the target uuid is the required device \nif (msg.peripheralUuid == tar){\n    //display rssi value\n    var x = msg.rssi; \n    msg.payload = x;\n    // device detected, counter = 0\n    count2 = 0;\n    context.set('count2',count2);\n    msg.count2 = count2;\n    return msg;\n}\nelse if (msg.peripheralUuid != tar){\n    // not our device, counter++;\n    count2 += 1;\n    context.set('count2',count2);\n    msg.count2 = count2;\n    // we have not receive the signal of target \n    // for a while, say that it is offline or \n    // out of range. \n    if (msg.count2 > wait || msg.noSig == 1){\n        msg.payload = -200;\n        // reset counter for next use\n        count2 = 0;\n        context.set('count2',count2);\n        msg.count2 = count2;\n        return msg;\n    }\n    \n}\n\n\n","outputs":1,"noerr":0,"x":780,"y":580,"wires":[["5fc5ed95.27c9f4"]]},{"id":"bf227e72.00917","type":"tcp out","z":"9947d194.0da3d","host":"192.168.101.18","port":"5555","beserver":"client","base64":false,"end":false,"name":"","x":1050,"y":560,"wires":[]},{"id":"5fc5ed95.27c9f4","type":"tcp out","z":"9947d194.0da3d","host":"192.168.101.18","port":"6666","beserver":"client","base64":false,"end":false,"name":"","x":1030,"y":620,"wires":[]},{"id":"447dd2da.c3101c","type":"function","z":"9947d194.0da3d","name":"filter_Beacon","func":"var tarMin = \"0cf3ee000000\";\nvar tarMax = \"0cf3eeffffff\";\nvar count_no = context.get('count_no')||0; //set counter\nvar time = 400;\n\n// the target uuid is within the range of 0x0cf3ee... because only the frist three octets are the common adress\nif (msg.peripheralUuid >= tarMin && msg.peripheralUuid <= tarMax){\n    // device detected, counter = 0\n    count_no = 0;\n    context.set('count_no',count_no);\n    msg.count_no = count_no;\n    msg.noSig = 0;\n    return msg;\n}\n\nelse{\n    count_no += 1;\n    context.set('count_no',count_no);\n    msg.count_no = count_no;\n    msg.noSig = 0;\n\n    if (msg.count_no > time){\n        msg.noSig = 1;\n        // reset counter for next use\n        count_no = 0;\n        context.set('count_no',count_no);\n        msg.count_no = count_no;\n        return;\n    }\n}\n\n","outputs":1,"noerr":0,"x":590,"y":500,"wires":[["8922cb4d.1143a8","cbb843fb.1598a"]]},{"id":"6165d2ee.70506c","type":"function","z":"9947d194.0da3d","name":"switch_set","func":"var b = msg.payload.toString();\nif(b == \"true\"){\n    msg.payload = {\n        scan: true\n    }\n}\nif(b === \"false\"){\n    msg.payload = {\n        scan: false\n    }\n}\nreturn msg;","outputs":1,"noerr":0,"x":230,"y":460,"wires":[["ee6f24ff.2497c8"]]},{"id":"199f825d.a2d74e","type":"tcp in","z":"9947d194.0da3d","name":"","server":"server","host":"","port":"48800","datamode":"stream","datatype":"buffer","newline":"","topic":"","base64":false,"x":60,"y":440,"wires":[["6165d2ee.70506c"]]},{"id":"7f02fef6.54bab","type":"debug","z":"9947d194.0da3d","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":430,"y":120,"wires":[]},{"id":"3b2cda72.c2ba76","type":"xbee-tx","z":"9947d194.0da3d","name":"","xBee":"ecb94d4c.99e8f","x":440,"y":180,"wires":[]},{"id":"8c318a47.27f5e8","type":"tcp in","z":"9947d194.0da3d","name":"","server":"server","host":"","port":"35001","datamode":"stream","datatype":"utf8","newline":"","topic":"","base64":false,"x":60,"y":60,"wires":[["2612436a.f02dfc"]]},{"id":"2612436a.f02dfc","type":"function","z":"9947d194.0da3d","name":"transmitSetUp","func":"var instruction = msg.payload.toString();\n\n var myDataFrame = {\n            type: 0x10,\n            id: 0x01,\n            destination64: \"0013A2004031FBCD\",\n            destination16: \"fffe\",\n            broadcastRadius: 0x00,\n            options: 0x00,\n            data: instruction\n        };\nmsg.payload = myDataFrame;\nreturn msg;","outputs":1,"noerr":0,"x":240,"y":120,"wires":[["3b2cda72.c2ba76","7f02fef6.54bab"]]},{"id":"e1d6cd52.8cfb6","type":"comment","z":"9947d194.0da3d","name":"Xbee: receive and pass string to client ","info":"receive string from server by tcp\nset up data structure for Xbee API transmission\nsend to Xbee client side ","x":150,"y":20,"wires":[]},{"id":"a8605564.080648","type":"comment","z":"9947d194.0da3d","name":"Xbee: receive and pass string to server","info":"receive string from client\nconvert buffer to string\nsend string to server by TCP","x":150,"y":240,"wires":[]},{"id":"96cb8040.e50b5","type":"comment","z":"9947d194.0da3d","name":"recevice instruction, scan BLE and send info to server","info":"receive switch output from server UI by TCP to control scanner on/off.\nscanner output rssi value for specific beacons\nsend rssi value to server by TCP.\n","x":200,"y":400,"wires":[]},{"id":"ecb94d4c.99e8f","type":"xbee-config","z":"","apiMode":"1","rawFrames":false,"convertAdc":true,"vrefAdc":"1200","serialPort":"/dev/ttyUSB0","lock":true,"baudRate":"9600","dataBits":"8","stopBits":"1","parity":"none","bufferSize":"65536","rtscts":false,"xon":false,"xoff":false,"xany":false,"vmin":"1","vtime":"0"}]